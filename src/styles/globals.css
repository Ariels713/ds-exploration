
:root {
  --ds-base-spacing: .5rem; 
  --ds-padding: .5rem;
}





























img {
  max-width: 100%;
  height: auto;
}
























/* Helper Class */
[class*="layout"] {
  margin-top: 4rem;
  background-color: #FEF6F5;
  outline: 1px solid #F4BBBA;
}
[class*="layout"] > * {
  outline: 1px solid #F4BBBA;
}

.debugger {
  background-color: #FEF6F5;
  outline: 1px solid #F4BBBA;
}

.container {
  --container-width: 80ch; 

width: min(var(--container-width), 100vw - 3rem);
margin-inline: auto;
}

html {
  min-height: 100%;
}

/*  typography styles*/
body {
  font-family: system-ui, sans-serif;
}
h1,
h2,
h3,
h4,
p {
  font-size: clamp(
    var(--fluid-type-min, 1rem),
    calc(1rem + var(--fluid-type-target, 3vw)),
    var(--fluid-type-max, 1.125rem)
  );
}

h1 {
  --fluid-type-min: 2.5rem;
  --fluid-type-max: 3rem;
  --fluid-type-target: 5vw;

  max-width: 15ch;
}

h2 {
  --fluid-type-min: 3rem;
  --fluid-type-max: 2.5rem;
}

h3 {
  --fluid-type-min: 1.5rem;
  --fluid-type-max: 2.0rem;
}

h4 {
  --fluid-type-min: 1.25rem;
  --fluid-type-max: 1.75rem;
}

h2,
h3,
h4 {
  max-width: 30ch;
}

p {
  max-width: 60ch;
}

:is(h1, h2, h3, h4, .h1, .h2, .h3, .h4) {
  line-height:calc(2px + 2ex + 2px);
  margin-block-end: 0.65em;
  overflow-wrap:break-word;
  hyphens:auto;
}

article, .content{
  --content-spacer:1em; 
  & > * + * {
    margin-block-start: var(--content-spacer);
  }

  /* Adds margin top to h2/h3 that are not after an h2 */
   & > * + *   :where(h2, h3:not(h2 + *)):where(:not(:first-child)) {
    margin-block-start: 2em;
  }

  /* If a Paragraph follows a list, adds extra space */
  & > * + *   :where(ul, ol) + p {
    margin-block-start: calc(var(--content-spacer) * 2);
  }

  & >  a:not([class]) {
    
    display: inline-block;
  }

}
 
hr {
  margin: 8vh 5vw;
  border-style: solid;
  border-color: var(--color-tertiary);
}

strong {
  font-weight: bold;
}


* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

